DATA STRUCTURES AND ALGORITHMS

#DATA STRUCTURES 
- Linked List
- Stack & Queue
- Trees
- Heaps
- Graphs

# ALGORITHMS
- Sorting
- Searching
- Greedy Slgorithm
- Dynamic Programming

#To solve a problem:
Step 1: Write some piece of lines which contains 2 for loops to get step-2
Step 2: Run one more for loop to get step-3
Step 3: Write a code in constant time and if we analyze the code, time complexity will be n^2 for step - 1 , n for step 2 and 1 or constant for step-3

To get the time complexity for the code :
We have to ignore constants, smaller values and the final time complexity will be n^2.


Best case,Average Case and Worst Case:

Getting 

#Linked List
Collection of similar type of data in random allocation
for circular linked list,  starting and ending points are same
In linked list, we have to store the data as well as address. We dont have any data type which can store both.We have to create our own datatype
Further we cretae a class and the class name is node.
declare 2 variables
There are 2 possibilities: single node and 
So if we want to create objects we want to call the constructir which will give the output in these two forms:
1) The node should be created with data and address null. for that we have to create a constructor which helps to create node with dta and address null


class Node{
    int data;
    Node next;
    
    Node(int data1){
        this.data= data1;
        this.next = null;
    }
    Node(int data1,Node next1){
        this.data = data1;
        this.next = next1;
    }
}
class Main {
    static Node convertArrayToLinkedlist(int[] arr){
        Node head = new Node(arr[0]);
        Node current = head;
        for(int i =1;i<arr.length;i++){
            Node temp = new Node(arr[i]);
            current.next = temp;
            current = temp;
        }
        return head;
    }
    static void print(Node head){
        Node temp = head;
        while(temp!=null){
            System.out.print(temp.data + ((temp.next!= null) ? "->" :"null"));
            temp = temp.next;
        }
    }
    
    public static void main(String[] args) {
        int[] arr ={1,2,3,4,5};
        Node head = convertArrayToLinkedlist(arr);
        print(head);
    }
}

